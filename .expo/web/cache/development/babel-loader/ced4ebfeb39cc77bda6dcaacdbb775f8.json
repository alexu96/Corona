{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/gulsanborbhuiya/Desktop/Corona/covid19/src/screen/India.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Searchbar from \"../components/Searchbar\";\nimport axios from 'axios';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar India = function India() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fetched = _useState6[0],\n      setFetched = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      hasError = _useState8[0],\n      setHasError = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      stateSearchedByUser = _useState10[0],\n      setState = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isStateFound = _useState12[0],\n      setIsStateFound = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      distDataAr = _useState14[0],\n      setDistDataAr = _useState14[1];\n\n  function searchState(state) {\n    console.log(data);\n    console.log('here in search', state);\n    var states = Object.keys(data);\n    var searchedState = states.filter(function (item) {\n      return item.trim().toLowerCase().match(state.trim().toLowerCase());\n    });\n\n    if (searchedState.length === 0) {\n      setIsStateFound(false);\n    } else {\n      setIsStateFound(true);\n      setState(data[searchedState[0]]);\n\n      var _distDataAr = Object.keys(data[searchedState[0]].districtData).map(function (key) {\n        return _objectSpread(_objectSpread({}, data[searchedState[0]].districtData[key]), {}, {\n          name: key\n        });\n      });\n\n      setDistDataAr(_distDataAr);\n      console.log(data[searchedState[0]]);\n      console.log(_distDataAr);\n    }\n  }\n\n  useEffect(function () {\n    fetch('https://api.covid19india.org/state_district_wise.json').then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      setData(res);\n      setIsLoading(false);\n      setHasError(false);\n      setFetched(true);\n    }).catch(function (e) {\n      console.log(e);\n      setHasError(true);\n    }).finally(function () {\n      return setIsLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Searchbar, {\n    searchState: searchState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: distDataAr,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar style = StyleSheet.create({});\nexport default India;","map":{"version":3,"sources":["/Users/gulsanborbhuiya/Desktop/Corona/covid19/src/screen/India.js"],"names":["React","useState","useEffect","Searchbar","axios","ScrollView","India","data","setData","isLoading","setIsLoading","fetched","setFetched","hasError","setHasError","stateSearchedByUser","setState","isStateFound","setIsStateFound","distDataAr","setDistDataAr","searchState","state","console","log","states","Object","keys","searchedState","filter","item","trim","toLowerCase","match","length","districtData","map","key","name","fetch","then","res","json","catch","e","finally","style","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, Alert, FlatList } from 'react-native'\nimport Searchbar from '../components/Searchbar'\nimport axios from 'axios'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nconst India = () => {\n  const [data, setData] = useState({})\n  const [isLoading, setIsLoading] = useState(true)\n  const [fetched, setFetched] = useState(false)\n  const [hasError, setHasError] = useState(false)\n  const [stateSearchedByUser, setState] = useState()\n  const [isStateFound, setIsStateFound] = useState(true)\n  const [distDataAr, setDistDataAr] = useState([])\n\n\n  function searchState(state) {\n    console.log(data)\n    console.log('here in search', state)\n    const states = Object.keys(data)\n    const searchedState = states.filter(item =>\n      item.trim().toLowerCase().match(state.trim().toLowerCase())\n    )\n    if (searchedState.length === 0) {\n      setIsStateFound(false)\n    } else {\n      setIsStateFound(true)\n      setState(data[searchedState[0]])\n      const distDataAr = Object.keys(data[searchedState[0]].districtData).map(key => ({\n        ...data[searchedState[0]].districtData[key],\n        name: key,\n      }))\n      setDistDataAr(distDataAr)\n      console.log(data[searchedState[0]])\n      console.log(distDataAr)\n    }\n  }\n\n  //Making API\n  useEffect(() => {\n    fetch('https://api.covid19india.org/state_district_wise.json')\n      .then(res => res.json())\n      .then(res => {\n        setData(res)\n        setIsLoading(false)\n        setHasError(false)\n        setFetched(true)\n      })\n      .catch(e => {\n        console.log(e)\n        setHasError(true)\n      })\n      .finally(() => setIsLoading(false))\n  }, [])\n\n  return (\n    <View>\n      <Searchbar searchState={searchState} />\n      <FlatList\n        data={distDataAr}\n        \n      />\n\n    </View>\n  )\n}\n\nconst style = StyleSheet.create({})\n\nexport default India\n\n"]},"metadata":{},"sourceType":"module"}