{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { ThemeContext } from 'react-navigation';\nimport { BottomNavigation } from 'react-native-paper';\n\nvar MaterialBottomTabView = function (_React$Component) {\n  _inherits(MaterialBottomTabView, _React$Component);\n\n  var _super = _createSuper(MaterialBottomTabView);\n\n  function MaterialBottomTabView() {\n    var _this;\n\n    _classCallCheck(this, MaterialBottomTabView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_getColor\", function (_ref) {\n      var route = _ref.route;\n      var descriptors = _this.props.descriptors;\n      var descriptor = descriptors[route.key];\n      var options = descriptor.options;\n\n      if (_this.context === 'dark' && options.tabBarColorDark) {\n        return options.tabBarColorDark;\n      } else if (options.tabBarColorLight) {\n        return options.tabBarColorLight;\n      } else {\n        return options.tabBarColor;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getactiveColor\", function () {\n      var _this$props2 = _this.props,\n          activeColor = _this$props2.activeColor,\n          activeColorLight = _this$props2.activeColorLight,\n          activeColorDark = _this$props2.activeColorDark;\n\n      if (_this.context === 'dark' && activeColorDark) {\n        return activeColorDark;\n      } else if (activeColorLight) {\n        return activeColorLight;\n      } else {\n        return activeColor;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getInactiveColor\", function () {\n      var _this$props3 = _this.props,\n          inactiveColor = _this$props3.inactiveColor,\n          inactiveColorLight = _this$props3.inactiveColorLight,\n          inactiveColorDark = _this$props3.inactiveColorDark;\n\n      if (_this.context === 'dark' && inactiveColorDark) {\n        return inactiveColorDark;\n      } else if (inactiveColorLight) {\n        return inactiveColorLight;\n      } else {\n        return inactiveColor;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_getBarStyle\", function () {\n      var _this$props4 = _this.props,\n          barStyle = _this$props4.barStyle,\n          barStyleLight = _this$props4.barStyleLight,\n          barStyleDark = _this$props4.barStyleDark;\n      return [barStyle, _this.context === 'dark' ? barStyleDark : barStyleLight];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderIcon\", function (_ref2) {\n      var route = _ref2.route,\n          focused = _ref2.focused,\n          color = _ref2.color;\n      return _this.props.renderIcon({\n        route: route,\n        focused: focused,\n        tintColor: color\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(MaterialBottomTabView, [{\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var _this$props5 = this.props,\n          navigation = _this$props5.navigation,\n          descriptors = _this$props5.descriptors;\n      var state = navigation.state;\n      var route = state.routes[state.index];\n      var options = descriptors[route.key].options;\n      return options.tabBarVisible;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          navigation = _this$props.navigation,\n          descriptors = _this$props.descriptors,\n          rest = _objectWithoutProperties(_this$props, [\"navigation\", \"descriptors\"]);\n\n      var activeColor = this._getactiveColor();\n\n      var inactiveColor = this._getInactiveColor();\n\n      var barStyle = this._getBarStyle();\n\n      var isVisible = this._isVisible();\n\n      var extraStyle = isVisible === false ? {\n        display: 'none',\n        position: undefined\n      } : null;\n      return React.createElement(BottomNavigation, _extends({}, rest, {\n        activeColor: activeColor,\n        inactiveColor: inactiveColor,\n        renderIcon: this._renderIcon,\n        barStyle: [barStyle, extraStyle],\n        navigationState: navigation.state,\n        getColor: this._getColor\n      }));\n    }\n  }]);\n\n  return MaterialBottomTabView;\n}(React.Component);\n\nexport { MaterialBottomTabView as default };\n\n_defineProperty(MaterialBottomTabView, \"contextType\", ThemeContext);","map":{"version":3,"sources":["MaterialBottomTabView.tsx"],"names":["MaterialBottomTabView","React","ThemeContext","route","descriptors","descriptor","options","activeColorDark","inactiveColorDark","barStyleDark","state","color","focused","tintColor","activeColor","inactiveColor","barStyle","isVisible","extraStyle","display","position","undefined","navigation","_getColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ThemeContext,\n  NavigationProp,\n  NavigationDescriptor,\n} from 'react-navigation';\nimport { BottomNavigation } from 'react-native-paper';\nimport { NavigationMaterialBottomTabConfig } from '../types';\nimport { ViewStyle } from 'react-native';\n\ntype Options = {\n  tabBarVisible?: boolean;\n  tabBarColor?: string;\n  tabBarColorLight?: string;\n  tabBarColorDark?: string;\n};\n\ntype Props = React.ComponentProps<typeof BottomNavigation> &\n  NavigationMaterialBottomTabConfig & {\n    navigation: NavigationProp<any>;\n    descriptors: { [key: string]: NavigationDescriptor<any, Options> };\n    screenProps?: unknown;\n    renderIcon: (options: {\n      route: { key: string };\n      focused: boolean;\n      tintColor: string;\n    }) => React.ReactNode;\n  };\n\nexport default class MaterialBottomTabView extends React.Component<Props> {\n  static contextType = ThemeContext;\n\n  _getColor = ({ route }: { route: { key: string } }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (this.context === 'dark' && options.tabBarColorDark) {\n      return options.tabBarColorDark;\n    } else if (options.tabBarColorLight) {\n      return options.tabBarColorLight;\n    } else {\n      return options.tabBarColor;\n    }\n  };\n\n  _getactiveColor = () => {\n    let { activeColor, activeColorLight, activeColorDark } = this.props;\n\n    if (this.context === 'dark' && activeColorDark) {\n      return activeColorDark;\n    } else if (activeColorLight) {\n      return activeColorLight;\n    } else {\n      return activeColor;\n    }\n  };\n\n  _getInactiveColor = () => {\n    let { inactiveColor, inactiveColorLight, inactiveColorDark } = this.props;\n\n    if (this.context === 'dark' && inactiveColorDark) {\n      return inactiveColorDark;\n    } else if (inactiveColorLight) {\n      return inactiveColorLight;\n    } else {\n      return inactiveColor;\n    }\n  };\n\n  _getBarStyle = () => {\n    let { barStyle, barStyleLight, barStyleDark } = this.props;\n\n    return [barStyle, this.context === 'dark' ? barStyleDark : barStyleLight];\n  };\n\n  _isVisible() {\n    const { navigation, descriptors } = this.props;\n    const { state } = navigation;\n    const route = state.routes[state.index];\n    const options = descriptors[route.key].options;\n    return options.tabBarVisible;\n  }\n\n  _renderIcon = ({\n    route,\n    focused,\n    color,\n  }: {\n    route: { key: string };\n    focused: boolean;\n    color: string;\n  }) => {\n    return this.props.renderIcon({ route, focused, tintColor: color });\n  };\n\n  render() {\n    const {\n      navigation,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors,\n      ...rest\n    } = this.props;\n\n    const activeColor = this._getactiveColor();\n    const inactiveColor = this._getInactiveColor();\n    const barStyle = this._getBarStyle();\n\n    const isVisible = this._isVisible();\n    const extraStyle: ViewStyle | null =\n      isVisible === false\n        ? {\n            display: 'none',\n            // When keyboard is shown, `position` is set to `absolute` in the library\n            // This somehow breaks `display: 'none'`, so we explcitely override `position`\n            position: undefined,\n          }\n        : null;\n\n    return (\n      <BottomNavigation\n        // Pass these for backward compaibility\n        {...rest}\n        activeColor={activeColor}\n        inactiveColor={inactiveColor}\n        renderIcon={this._renderIcon}\n        barStyle={[barStyle, extraStyle]}\n        navigationState={navigation.state}\n        getColor={this._getColor}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}